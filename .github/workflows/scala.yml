name: Scala CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types:
    - published

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0
      - name: Setup Scala and Java
        uses: olafurpg/setup-scala@v10
      - name: Cache scala dependencies
        uses: coursier/cache-action@v5
      - name: Lint code
        run: sbt scalafmtCheckAll

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: ['adopt@1.8', 'adopt@1.11']
        scala: ['2.12.16', '2.13.8']
    steps:
    - name: Checkout current branch
      uses: actions/checkout@v2
    - name: Set up Scala and JDK
      uses: olafurpg/setup-scala@v10
      with:
        java-version: ${{ matrix.java }}
    - name: Cache scala dependencies
      uses: coursier/cache-action@v5
    - name: Run tests
      run: sbt ++${{ matrix.scala }}! test

  publish:

    runs-on: ubuntu-latest

    needs: [build]
    if: github.event_name != 'pull_request'

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: olafurpg/setup-scala@v10
    - run: sbt ci-release
      env:
        PGP_PASSPHRASE: ${{ secrets.PGP_PASSPHRASE }}
        PGP_SECRET: ${{ secrets.PGP_SECRET }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
